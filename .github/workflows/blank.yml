name: Build OpenWrt Firmware

on:
  workflow_dispatch:
    inputs:
      target:
        description: 'Target platform'
        required: true
        type: choice
        options:
          - rockchip
      subtarget:
        description: 'Subtarget/Chip'
        required: true
        type: choice
        options:
          - rk3568
      device:
        description: 'Device name'
        required: true
        type: choice
        options:
          - nanopi-r5s
      config_url:
        description: '公开可访问的 .config 文件 URL (必须以 http 或 https 开头)'
        required: true
        default: 'https://raw.githubusercontent.com/ctowl/im_action/refs/heads/main/custom/nanopi-r5s.config'

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 360

    steps:
      - name: Checkout OpenWrt source
        uses: actions/checkout@v4
        with:
          repository: immortalwrt/immortalwrt
          ref: master

      - name: Install build dependencies
        run: |
          sudo bash -c 'bash <(curl -s https://build-scripts.immortalwrt.org/init_build_environment.sh)'

      - name: Update and install feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Download custom config from URL
        run: |
          if [[ -z "${{ github.event.inputs.config_url }}" ]]; then
            echo "Error: config_url is empty"
            exit 1
          fi
          echo "Downloading config from ${{ github.event.inputs.config_url }}"
          wget -O .config "${{ github.event.inputs.config_url }}"
          
      - name: Prepare build environment
        run: |
          make defconfig
          make download -j$(nproc)
          find dl -size -1024c -exec rm -f {} \;          

      - name: Build firmware
        run: |
          make -j$(nproc) || make -j1 V=s

      - name: Package firmware
        run: |
          mkdir -p output
          cp -r bin/targets/*/* output/
          cd output && zip -r ../firmware.zip . && cd ..
          echo "FIRMWARE_PATH=firmware.zip" >> $GITHUB_ENV

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt-${{ github.event.inputs.device }}
          path: firmware.zip

      - name: Create tag
        id: tag
        run: |
          echo "TAG_NAME=OpenWrt-$(date +%Y%m%d)-${{ github.event.inputs.device }}" >> $GITHUB_ENV

      - name: Create GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: ${{ env.TAG_NAME }}
          draft: false
          prerelease: false
          body: |
            # 🎉 OpenWrt 固件发布 - ${{ github.event.inputs.device }}

            - 📅 构建日期：**${{ env.TAG_NAME }}**
            - 📦 设备型号：**${{ github.event.inputs.device }}**
            - 🧱 平台架构：**${{ github.event.inputs.target }} / ${{ github.event.inputs.subtarget }}**
            - 🌐 默认 IP：`192.168.1.1`
            - 🔑 默认用户名：`root`
            - 🔒 默认密码：空（首次登录无需密码）

            ---

            ## 📥 下载地址

            | 文件名 | 描述 |
            |--------|------|
            | `firmware.zip` | 固件包（包括内核、根文件系统等） |

            ---

            ## 📚 功能根据 .config 文件自定义

            ---

            ✨ 基于 [OpenWrt 官方仓库](https://github.com/openwrt/openwrt) 编译。

      - name: Upload firmware to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ${{ env.FIRMWARE_PATH }}
          asset_name: OpenWrt-${{ github.event.inputs.device }}.zip
          asset_content_type: application/zip
