name: ImmortalWrt Build with ImageBuilder

on:
  workflow_dispatch:
    inputs:
      device:
        description: 'Device name'
        required: true
        type: choice
        options: [nanopi-r5s]
      config_url:
        description: '公开可访问的 .config 文件 URL'
        required: true
        default: 'https://raw.githubusercontent.com/ctowl/im_action/refs/heads/main/custom/nanopi-r5s.config'
      packages:
        description: '额外的软件包（空格分隔）'
        required: false
        default: 'luci'

jobs:
  prepare:
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    outputs:
      tag_name: ${{ steps.tag.outputs.TAG_NAME }}

    steps:
      - name: Checkout ImmortalWrt
        uses: actions/checkout@v4
        with:
          repository: immortalwrt/immortalwrt
          ref: master

      - name: Init build environment
        run: |
          sudo bash -c 'bash <(curl -s https://build-scripts.immortalwrt.org/init_build_environment.sh)'

      - name: Download custom .config
        run: |
          wget -O .config "${{ github.event.inputs.config_url }}"
          make defconfig

      - name: Update & install feeds
        run: |
          cat > feeds.conf.default <<EOF
          src-git packages https://github.com/immortalwrt/packages
          src-git luci https://github.com/immortalwrt/luci
          src-git routing https://github.com/openwrt-routing/packages
          src-git telephony https://github.com/openwrt/telephony
          src-git emortal https://github.com/immortalwrt/packages
          EOF
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Build ImageBuilder only (rockchip only)
        run: |
          echo "CONFIG_TARGET_rockchip=y" >> .config
          echo "CONFIG_TARGET_rockchip_rk3568=y" >> .config
          echo "CONFIG_TARGET_rockchip_rk3568_DEVICE_${{ github.event.inputs.device }}=y" >> .config
          echo "CONFIG_IB=y" >> .config
          make defconfig
          make imagebuilder -j1 V=s

      - name: Archive ImageBuilder
        run: |
          cd bin/targets/*/*
          tar -I 'zstd -19 -T0' -cf imagebuilder.tar.zst openwrt-imagebuilder-*.tar.xz

      - name: Upload ImageBuilder
        uses: actions/upload-artifact@v4
        with:
          name: imagebuilder
          path: bin/targets/*/*/imagebuilder.tar.zst

      - name: Create tag
        id: tag
        run: |
          echo "TAG_NAME=immortalwrt-ib-$(date +%Y%m%d)-${{ github.event.inputs.device }}" >> $GITHUB_ENV
          echo "TAG_NAME=immortalwrt-ib-$(date +%Y%m%d)-${{ github.event.inputs.device }}" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-22.04
    needs: prepare
    timeout-minutes: 60

    steps:
      - name: Download ImageBuilder
        uses: actions/download-artifact@v4
        with:
          name: imagebuilder
          path: .

      - name: Extract ImageBuilder
        run: |
          tar -I zstd -xf imagebuilder.tar.zst
          IMAGEBUILDER_DIR=$(find . -maxdepth 1 -type d -name "openwrt-imagebuilder-*")
          echo "IMAGEBUILDER_DIR=$IMAGEBUILDER_DIR" >> $GITHUB_ENV

      - name: Build firmware with ImageBuilder
        run: |
          cd $IMAGEBUILDER_DIR
          make image PROFILE=${{ github.event.inputs.device }} \
            PACKAGES="${{ github.event.inputs.packages }}" \
            FILES=../files

      - name: Package firmware
        run: |
          mkdir -p output
          cp -r $IMAGEBUILDER_DIR/bin/targets/*/* output/
          cd output && zip -r ../firmware.zip . && cd ..

      - name: Upload firmware
        uses: actions/upload-artifact@v4
        with:
          name: firmware
          path: firmware.zip

  release:
    runs-on: ubuntu-22.04
    needs: [prepare, build]

    steps:
      - name: Download firmware
        uses: actions/download-artifact@v4
        with:
          name: firmware
          path: .

      - name: Create GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.prepare.outputs.tag_name }}
          release_name: ${{ needs.prepare.outputs.tag_name }}
          draft: false
          prerelease: false
          body: |
            🎉 使用 ImageBuilder 构建的固件 - **${{ github.event.inputs.device }}**

            - 构建时间：${{ needs.prepare.outputs.tag_name }}
            - 默认地址：192.168.1.1
            - 用户名：root，密码为空
            - 包含软件包：`${{ github.event.inputs.packages }}`

      - name: Upload firmware to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: firmware.zip
          asset_name: immortalwrt-${{ github.event.inputs.device }}.zip
          asset_content_type: application/zip
