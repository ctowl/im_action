name: Build immortalwrt Firmware (Rockchip Optimized)

on:
  workflow_dispatch:
    inputs:
      target:
        description: 'Target platform'
        required: true
        type: choice
        options:
          - rockchip
      subtarget:
        description: 'Subtarget/Chip'
        required: true
        type: choice
        options:
          - rk3568
      device:
        description: 'Device name'
        required: true
        type: choice
        options:
          - nanopi-r5s
      config_url:
        description: '公开可访问的 .config 文件 URL (必须以 http 或 https 开头)'
        required: true
        default: 'https://raw.githubusercontent.com/ctowl/im_action/refs/heads/main/custom/nanopi-r5s.config'

jobs:
  prepare:
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    outputs:
      tag_name: ${{ steps.tag.outputs.TAG_NAME }}

    steps:
      - name: Checkout immortalwrt source
        uses: actions/checkout@v4
        with:
          repository: immortalwrt/immortalwrt
          ref: master

      - name: Init build environment
        run: |
          sudo bash -c 'bash <(curl -s https://build-scripts.immortalwrt.org/init_build_environment.sh)'
          sudo apt-get install -y zstd

      - name: Setup and update feeds
        run: |
          cat > feeds.conf.default <<EOF
          src-git packages https://github.com/immortalwrt/packages
          src-git luci https://github.com/immortalwrt/luci
          src-git routing https://github.com/openwrt-routing/packages
          src-git telephony https://github.com/openwrt/telephony
          src-git emortal https://github.com/immortalwrt/packages
          EOF
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Download custom .config and prepare toolchain
        run: |
          wget -O .config "${{ github.event.inputs.config_url }}"
          make defconfig
          make tools/install -j$(nproc)
          make toolchain/install -j$(nproc)

      - name: Save workspace as artifact
        run: |
          tar -I 'zstd -19 -T0' -cf workspace.tar.zst --warning=no-file-changed .

      - uses: actions/upload-artifact@v4
        with:
          name: build-workspace
          path: workspace.tar.zst

      - name: Create tag name
        id: tag
        run: |
          echo "TAG_NAME=immortalwrt-$(date +%Y%m%d)-${{ github.event.inputs.device }}" >> $GITHUB_ENV
          echo "TAG_NAME=immortalwrt-$(date +%Y%m%d)-${{ github.event.inputs.device }}" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 240
    needs: prepare

    steps:
      - name: Init build environment
        run: |
          sudo bash -c 'bash <(curl -s https://build-scripts.immortalwrt.org/init_build_environment.sh)'
          sudo apt-get install -y zstd

      - name: Download workspace
        uses: actions/download-artifact@v4
        with:
          name: build-workspace
          path: .

      - name: Extract workspace
        run: |
          tar -I zstd -xf workspace.tar.zst
          rm workspace.tar.zst

      - name: Build firmware
        run: |
          make -j$(nproc) || make -j1 V=s

      - name: Cleanup unnecessary directories
        run: |
          echo "Cleaning up build_dir, staging_dir, toolchain, etc..."
          rm -rf build_dir dl staging_dir toolchain tmp .config.old .version .vermagic

      - name: Package firmware
        run: |
          mkdir -p output
          cp -r bin/targets/*/* output/
          tar -I 'zstd -19 -T0' -cf firmware.tar.zst -C output .

      - name: Upload firmware artifact
        uses: actions/upload-artifact@v4
        with:
          name: firmware
          path: firmware.tar.zst

  release:
    runs-on: ubuntu-22.04
    needs: [prepare, build]

    steps:
      - name: Download firmware
        uses: actions/download-artifact@v4
        with:
          name: firmware
          path: .

      - name: Create GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.prepare.outputs.tag_name }}
          release_name: ${{ needs.prepare.outputs.tag_name }}
          draft: false
          prerelease: false
          body: |
            # 🎉 immortalwrt 固件发布 - ${{ github.event.inputs.device }}

            - 📅 构建日期：**${{ needs.prepare.outputs.tag_name }}**
            - 📦 设备型号：**${{ github.event.inputs.device }}**
            - 🧱 平台架构：**${{ github.event.inputs.target }} / ${{ github.event.inputs.subtarget }}**
            - 🌐 默认 IP：`192.168.1.1`
            - 🔑 默认用户名：`root`
            - 🔒 默认密码：空（首次登录无需密码）

            ## 📥 下载地址

            | 文件名 | 描述 |
            |--------|------|
            | `firmware.tar.zst` | 固件包（压缩格式） |

            ✨ 基于 [immortalwrt 官方仓库](https://github.com/immortalwrt/immortalwrt) 编译。

      - name: Upload firmware to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: firmware.tar.zst
          asset_name: immortalwrt-${{ github.event.inputs.device }}.tar.zst
          asset_content_type: application/zstd
